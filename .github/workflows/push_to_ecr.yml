

name: Deploy to ECR

on:
  push:
    branches: [ master ]
  workflow_dispatch:
  
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env: 
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_SESSION_TOKEN: ${{secrets.AWS_SESSION_TOKEN}}
          AWS_REGION: us-east-1
          
      - name: Build, Test, Tag and push cats image to Amazon ECR
        env: 
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: assignment1
          IMAGE_TAG: catspic
          
        run: |
          cd cats/
          ls -ltra
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker run -d -p 8080:80 --name assignment1-cats $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker ps
          echo " sleep 10 seconds for container to run"
          sleep 10
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
      - name: Build, Test, Tag and push dogs image to Amazon ECR
        env: 
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: assignment1
          IMAGE_TAG: dogspic
          
        run: |
          cd dogs/
          ls -ltra
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker run -d -p 8081:80 --name assignment1-dogs $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker ps
          echo " sleep 10 seconds for container to run"
          sleep 10
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  
