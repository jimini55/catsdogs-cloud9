# This is a basic workflow to help you get started with Actions

name: Deployto ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Build Image
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env: 
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_SESSION_TOKEN: ${{secrets.AWS_SESSION_TOKEN}}
          AWS_REGION: us-east-1
          
      - name: Build,test, tag and push image to Amazon ECR
        env: 
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: clo835-assignment1
          IMAGE_TAG: v0.1
          
      # Runs a set of commands
        run: |
          cd cats/
          ls -ltra
          # Build the docker image 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # Run the conatainer to test
          docker run -d -p 80:8080 --name clo835-assignment1 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # list the containers
          docker ps
          echo " sleep 10 seconds for container to run"
          sleep 10
          # curl the local host to check website content
          curl localhost -vvv
          # Push the docker image to ECR repository
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
